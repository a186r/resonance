{
  "contractName": "Authority",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_authority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_authority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/root/contract/contract/contracts/Authority.sol\":\"Authority\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/root/contract/contract/contracts/Authority.sol\":{\"keccak256\":\"0x6986643d0cad878e9f045ebb838dc773a45fc5eb1cecf3b0685233c0d9271166\",\"urls\":[\"bzzr://c029c28c84e1cfc154bfde3c57d47fd34f19ffa0bda08c38f09a1739702411a6\"]},\"/root/contract/contract/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x9eeb191ddf46916d80d1669a594261abb35b76aa6eadfa081b84e0a95c7cf767\",\"urls\":[\"bzzr://767c79c5c7f9d9c6f785f7226b632405f70997a96f6d41aa9b1241b959186688\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060008054600160a060020a0319163317808255604051600160a060020a039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36102b0806100696000396000f30060806040526004361061006c5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a681146100715780637a9e5e4b146100885780638da5cb5b146100a95780638f32d59b146100da578063f2fde38b14610103575b600080fd5b34801561007d57600080fd5b50610086610124565b005b34801561009457600080fd5b50610086600160a060020a036004351661018e565b3480156100b557600080fd5b506100be6101c8565b60408051600160a060020a039092168252519081900360200190f35b3480156100e657600080fd5b506100ef6101d7565b604080519115158252519081900360200190f35b34801561010f57600080fd5b50610086600160a060020a03600435166101e8565b61012c6101d7565b151561013757600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6101966101d7565b15156101a157600080fd5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b600054600160a060020a031690565b600054600160a060020a0316331490565b6101f06101d7565b15156101fb57600080fd5b61020481610207565b50565b600160a060020a038116151561021c57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820f5fe98766f8813f5a4f1c5d38d1f73396877ec020a543907823dc5ee21b2ca5e0029",
  "deployedBytecode": "0x60806040526004361061006c5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a681146100715780637a9e5e4b146100885780638da5cb5b146100a95780638f32d59b146100da578063f2fde38b14610103575b600080fd5b34801561007d57600080fd5b50610086610124565b005b34801561009457600080fd5b50610086600160a060020a036004351661018e565b3480156100b557600080fd5b506100be6101c8565b60408051600160a060020a039092168252519081900360200190f35b3480156100e657600080fd5b506100ef6101d7565b604080519115158252519081900360200190f35b34801561010f57600080fd5b50610086600160a060020a03600435166101e8565b61012c6101d7565b151561013757600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6101966101d7565b15156101a157600080fd5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b600054600160a060020a031690565b600054600160a060020a0316331490565b6101f06101d7565b15156101fb57600080fd5b61020481610207565b50565b600160a060020a038116151561021c57600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820f5fe98766f8813f5a4f1c5d38d1f73396877ec020a543907823dc5ee21b2ca5e0029",
  "sourceMap": "114:356:1:-;;;191:29;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;516:6:15;:19;;-1:-1:-1;;;;;;516:19:15;525:10;516:19;;;;550:40;;-1:-1:-1;;;;;583:6:15;;;;;516;550:40;;516:6;;550:40;114:356:1;;;;;;",
  "deployedSourceMap": "114:356:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1424:137:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1424:137:15;;;;;;362:106:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;362:106:1;-1:-1:-1;;;;;362:106:1;;;;;660:77:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:77:15;;;;;;;;-1:-1:-1;;;;;660:77:15;;;;;;;;;;;;;;980:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;980:90:15;;;;;;;;;;;;;;;;;;;;;;1732:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1732:107:15;-1:-1:-1;;;;;1732:107:15;;;;;1424:137;864:9;:7;:9::i;:::-;856:18;;;;;;;;1522:1;1506:6;;1485:40;;-1:-1:-1;;;;;1506:6:15;;;;1485:40;;1522:1;;1485:40;1552:1;1535:19;;-1:-1:-1;;1535:19:15;;;1424:137::o;362:106:1:-;864:9:15;:7;:9::i;:::-;856:18;;;;;;;;-1:-1:-1;;;;;433:21:1;;;;;457:4;433:21;;;;;;;;:28;;-1:-1:-1;;433:28:1;;;;;;362:106::o;660:77:15:-;698:7;724:6;-1:-1:-1;;;;;724:6:15;660:77;:::o;980:90::-;1020:4;1057:6;-1:-1:-1;;;;;1057:6:15;1043:10;:20;;980:90::o;1732:107::-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1804:28;1823:8;1804:18;:28::i;:::-;1732:107;:::o;1983:183::-;-1:-1:-1;;;;;2056:22:15;;;;2048:31;;;;;;2115:6;;;2094:38;;-1:-1:-1;;;;;2094:38:15;;;;2115:6;;;2094:38;;;2142:6;:17;;-1:-1:-1;;2142:17:15;-1:-1:-1;;;;;2142:17:15;;;;;;;;;;1983:183::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\nimport \"../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\ncontract Authority is Ownable{\n\n    mapping(address => bool) hasAccess;\n\n    constructor () public {\n    }\n\n    modifier onlyAuthority() {\n        require(hasAccess[msg.sender], \"调用者必须是ResonanceDataManage合约\");\n        _;\n    }\n\n    function setAuthority(address _authority) public onlyOwner() {\n        hasAccess[_authority] = true;\n    }\n}",
  "sourcePath": "/root/contract/contract/contracts/Authority.sol",
  "ast": {
    "absolutePath": "/root/contract/contract/contracts/Authority.sol",
    "exportedSymbols": {
      "Authority": [
        103
      ]
    },
    "id": 104,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 65,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/root/contract/contract/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 104,
        "sourceUnit": 6021,
        "src": "33:79:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 67,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6020,
              "src": "136:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6020",
                "typeString": "contract Ownable"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "136:7:1"
          }
        ],
        "contractDependencies": [
          6020
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 103,
        "linearizedBaseContracts": [
          103,
          6020
        ],
        "name": "Authority",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 72,
            "name": "hasAccess",
            "nodeType": "VariableDeclaration",
            "scope": 103,
            "src": "150:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 69,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "158:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "150:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 70,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "169:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "213:7:1",
              "statements": []
            },
            "documentation": null,
            "id": 76,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:1"
            },
            "scope": 103,
            "src": "191:29:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "251:105:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 79,
                          "name": "hasAccess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "269:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 82,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6661,
                            "src": "279:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "279:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "269:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "e8b083e794a8e88085e5bf85e9a1bbe698af5265736f6e616e6365446174614d616e616765e59088e7baa6",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "292:45:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f0ded9541a24ede8c065412c3bed30a83ec172acd401df7cd0e7cc5657cb3f6",
                          "typeString": "literal_string \"调用者必须是ResonanceDataManage合约\""
                        },
                        "value": "调用者必须是ResonanceDataManage合约"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f0ded9541a24ede8c065412c3bed30a83ec172acd401df7cd0e7cc5657cb3f6",
                          "typeString": "literal_string \"调用者必须是ResonanceDataManage合约\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6664,
                        6665
                      ],
                      "referencedDeclaration": 6665,
                      "src": "261:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "261:77:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "261:77:1"
                },
                {
                  "id": 86,
                  "nodeType": "PlaceholderStatement",
                  "src": "348:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 88,
            "name": "onlyAuthority",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "248:2:1"
            },
            "src": "226:130:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "423:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "hasAccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "433:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 97,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "_authority",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "443:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "433:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "457:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "433:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "433:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 102,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 93,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 92,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5954,
                  "src": "411:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "411:11:1"
              }
            ],
            "name": "setAuthority",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "name": "_authority",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "384:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "383:20:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:1"
            },
            "scope": 103,
            "src": "362:106:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 104,
        "src": "114:356:1"
      }
    ],
    "src": "0:470:1"
  },
  "legacyAST": {
    "absolutePath": "/root/contract/contract/contracts/Authority.sol",
    "exportedSymbols": {
      "Authority": [
        103
      ]
    },
    "id": 104,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 65,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "/root/contract/contract/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 104,
        "sourceUnit": 6021,
        "src": "33:79:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 67,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6020,
              "src": "136:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6020",
                "typeString": "contract Ownable"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "136:7:1"
          }
        ],
        "contractDependencies": [
          6020
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 103,
        "linearizedBaseContracts": [
          103,
          6020
        ],
        "name": "Authority",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 72,
            "name": "hasAccess",
            "nodeType": "VariableDeclaration",
            "scope": 103,
            "src": "150:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 69,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "158:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "150:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 70,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "169:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "213:7:1",
              "statements": []
            },
            "documentation": null,
            "id": 76,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "203:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "213:0:1"
            },
            "scope": 103,
            "src": "191:29:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "251:105:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 79,
                          "name": "hasAccess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "269:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 82,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6661,
                            "src": "279:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "279:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "269:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "e8b083e794a8e88085e5bf85e9a1bbe698af5265736f6e616e6365446174614d616e616765e59088e7baa6",
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "292:45:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f0ded9541a24ede8c065412c3bed30a83ec172acd401df7cd0e7cc5657cb3f6",
                          "typeString": "literal_string \"调用者必须是ResonanceDataManage合约\""
                        },
                        "value": "调用者必须是ResonanceDataManage合约"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f0ded9541a24ede8c065412c3bed30a83ec172acd401df7cd0e7cc5657cb3f6",
                          "typeString": "literal_string \"调用者必须是ResonanceDataManage合约\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6664,
                        6665
                      ],
                      "referencedDeclaration": 6665,
                      "src": "261:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "261:77:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "261:77:1"
                },
                {
                  "id": 86,
                  "nodeType": "PlaceholderStatement",
                  "src": "348:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 88,
            "name": "onlyAuthority",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "248:2:1"
            },
            "src": "226:130:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "423:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "hasAccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "433:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 97,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 96,
                        "name": "_authority",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "443:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "433:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "457:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "433:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "433:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 102,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 93,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 92,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5954,
                  "src": "411:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "411:11:1"
              }
            ],
            "name": "setAuthority",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "name": "_authority",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "384:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "383:20:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:1"
            },
            "scope": 103,
            "src": "362:106:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 104,
        "src": "114:356:1"
      }
    ],
    "src": "0:470:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xBbff2eC884B0B4c8b612Bf9d3215D34a3773ded2",
      "transactionHash": "0xfec8fa7b996a985f9023ab5665a0ef3110cf0e65e27b3a259569f7186ac4d99d"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-06-03T22:57:43.988Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}