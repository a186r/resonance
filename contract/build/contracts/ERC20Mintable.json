{
  "contractName": "ERC20Mintable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"ERC20Mintable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/root/contract/contract/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":\"ERC20Mintable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/root/contract/contract/node_modules/openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xfd1a32f8cf3a9ba334f62c00ca5f725823064f2e02f29f60074278261307c1b1\",\"urls\":[\"bzzr://575a95979ff84ceed5592d89c909aebe18a6517ae18f460421b01b2fc1b1f03d\"]},\"/root/contract/contract/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x6fba6fd5ec9dd35abd15ec888528c9f19689c1fad631aeb4900a584a0b54650d\",\"urls\":[\"bzzr://361e949b5a03dc7bcdb03ac0d2bef04fdbd67aee780fc61e62510a1759f86de3\"]},\"/root/contract/contract/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x99966348eaf77499397c758b6426a7975ee091040645c3bfa9cfe259d67c6c00\",\"urls\":[\"bzzr://774bbdac8b93b9fa5ab726c9f95a5a62a6b55c9f11e8e75f30e132621e663933\"]},\"/root/contract/contract/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3baf6075a7bae5091537284de3a456ec851d263f0efec74b7b94a9558ae91a49\",\"urls\":[\"bzzr://7029af013902623135644cb1ed9975373453725adc8f881ab584c81b79fecb32\"]},\"/root/contract/contract/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xf88a7b8c02ed4b70ab2ae9dc21d52090d07b7910f276a3c6d6db9538564fc208\",\"urls\":[\"bzzr://60375c593b9d4f7a2f2e52fd2ac883ef9d9fe17f9559fd243c8550ead482ace6\"]},\"/root/contract/contract/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1b4c998c669d3b057032f4834e8f5e156fb3cbc585a8e9c1a26a600cb73ab2e8\",\"urls\":[\"bzzr://7a16074c2b77125e55a6c467e0820ec8e75e56a09180623339274cc61f35e59a\"]}},\"version\":1}",
  "bytecode": "0x60806040526100163364010000000061001b810204565b6100f8565b61003360038264010000000061071461006a82021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a038116151561007f57600080fd5b61009282826401000000006100c1810204565b1561009c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a03821615156100d857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b6107da806101076000396000f3006080604052600436106100b95763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100be57806318160ddd146100f657806323b872dd1461011d578063395093511461014757806340c10f191461016b57806370a082311461018f578063983b2d56146101b057806398650275146101d3578063a457c2d7146101e8578063a9059cbb1461020c578063aa271e1a14610230578063dd62ed3e14610251575b600080fd5b3480156100ca57600080fd5b506100e2600160a060020a0360043516602435610278565b604080519115158252519081900360200190f35b34801561010257600080fd5b5061010b61028e565b60408051918252519081900360200190f35b34801561012957600080fd5b506100e2600160a060020a0360043581169060243516604435610294565b34801561015357600080fd5b506100e2600160a060020a03600435166024356102eb565b34801561017757600080fd5b506100e2600160a060020a0360043516602435610327565b34801561019b57600080fd5b5061010b600160a060020a0360043516610347565b3480156101bc57600080fd5b506101d1600160a060020a0360043516610362565b005b3480156101df57600080fd5b506101d1610382565b3480156101f457600080fd5b506100e2600160a060020a036004351660243561038d565b34801561021857600080fd5b506100e2600160a060020a03600435166024356103c9565b34801561023c57600080fd5b506100e2600160a060020a03600435166103d6565b34801561025d57600080fd5b5061010b600160a060020a03600435811690602435166103ef565b600061028533848461041a565b50600192915050565b60025490565b60006102a18484846104a6565b600160a060020a0384166000908152600160209081526040808320338085529252909120546102e19186916102dc908663ffffffff61057316565b61041a565b5060019392505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916102859185906102dc908663ffffffff61058a16565b6000610332336103d6565b151561033d57600080fd5b61028583836105a3565b600160a060020a031660009081526020819052604090205490565b61036b336103d6565b151561037657600080fd5b61037f8161064d565b50565b61038b33610695565b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916102859185906102dc908663ffffffff61057316565b60006102853384846104a6565b60006103e960038363ffffffff6106dd16565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561042f57600080fd5b600160a060020a038316151561044457600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03821615156104bb57600080fd5b600160a060020a0383166000908152602081905260409020546104e4908263ffffffff61057316565b600160a060020a038085166000908152602081905260408082209390935590841681522054610519908263ffffffff61058a16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000808383111561058357600080fd5b5050900390565b60008282018381101561059c57600080fd5b9392505050565b600160a060020a03821615156105b857600080fd5b6002546105cb908263ffffffff61058a16565b600255600160a060020a0382166000908152602081905260409020546105f7908263ffffffff61058a16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61065e60038263ffffffff61071416565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6106a660038263ffffffff61076216565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a03821615156106f457600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a038116151561072957600080fd5b61073382826106dd565b1561073d57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561077757600080fd5b61078182826106dd565b151561078c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff191690555600a165627a7a7230582077231d408333a4f785d54c34e332ef89e580551110dc7a5927411d72d24436ab0029",
  "deployedBytecode": "0x6080604052600436106100b95763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100be57806318160ddd146100f657806323b872dd1461011d578063395093511461014757806340c10f191461016b57806370a082311461018f578063983b2d56146101b057806398650275146101d3578063a457c2d7146101e8578063a9059cbb1461020c578063aa271e1a14610230578063dd62ed3e14610251575b600080fd5b3480156100ca57600080fd5b506100e2600160a060020a0360043516602435610278565b604080519115158252519081900360200190f35b34801561010257600080fd5b5061010b61028e565b60408051918252519081900360200190f35b34801561012957600080fd5b506100e2600160a060020a0360043581169060243516604435610294565b34801561015357600080fd5b506100e2600160a060020a03600435166024356102eb565b34801561017757600080fd5b506100e2600160a060020a0360043516602435610327565b34801561019b57600080fd5b5061010b600160a060020a0360043516610347565b3480156101bc57600080fd5b506101d1600160a060020a0360043516610362565b005b3480156101df57600080fd5b506101d1610382565b3480156101f457600080fd5b506100e2600160a060020a036004351660243561038d565b34801561021857600080fd5b506100e2600160a060020a03600435166024356103c9565b34801561023c57600080fd5b506100e2600160a060020a03600435166103d6565b34801561025d57600080fd5b5061010b600160a060020a03600435811690602435166103ef565b600061028533848461041a565b50600192915050565b60025490565b60006102a18484846104a6565b600160a060020a0384166000908152600160209081526040808320338085529252909120546102e19186916102dc908663ffffffff61057316565b61041a565b5060019392505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916102859185906102dc908663ffffffff61058a16565b6000610332336103d6565b151561033d57600080fd5b61028583836105a3565b600160a060020a031660009081526020819052604090205490565b61036b336103d6565b151561037657600080fd5b61037f8161064d565b50565b61038b33610695565b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916102859185906102dc908663ffffffff61057316565b60006102853384846104a6565b60006103e960038363ffffffff6106dd16565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a038216151561042f57600080fd5b600160a060020a038316151561044457600080fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03821615156104bb57600080fd5b600160a060020a0383166000908152602081905260409020546104e4908263ffffffff61057316565b600160a060020a038085166000908152602081905260408082209390935590841681522054610519908263ffffffff61058a16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000808383111561058357600080fd5b5050900390565b60008282018381101561059c57600080fd5b9392505050565b600160a060020a03821615156105b857600080fd5b6002546105cb908263ffffffff61058a16565b600255600160a060020a0382166000908152602081905260409020546105f7908263ffffffff61058a16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61065e60038263ffffffff61071416565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6106a660038263ffffffff61076216565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a03821615156106f457600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a038116151561072957600080fd5b61073382826106dd565b1561073d57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561077757600080fd5b61078182826106dd565b151561078c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff191690555600a165627a7a7230582077231d408333a4f785d54c34e332ef89e580551110dc7a5927411d72d24436ab0029",
  "sourceMap": "153:421:20:-;;;276:22:13;287:10;276;;;;:22;:::i;:::-;153:421:20;;686:119:13;742:21;:8;755:7;742:12;;;;;;:21;:::i;:::-;778:20;;-1:-1:-1;;;;;778:20:13;;;;;;;;686:119;:::o;260:181:12:-;-1:-1:-1;;;;;336:21:12;;;;328:30;;;;;;377:18;381:4;387:7;377:3;;;;:18;:::i;:::-;376:19;368:28;;;;;;-1:-1:-1;;;;;407:20:12;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;407:27:12;430:4;407:27;;;260:181::o;787:162::-;859:4;-1:-1:-1;;;;;883:21:12;;;;875:30;;;;;;-1:-1:-1;;;;;;922:20:12;:11;:20;;;;;;;;;;;;;;;787:162::o;153:421:20:-;;;;;;;",
  "deployedSourceMap": "153:421:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2722:145:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2722:145:16;-1:-1:-1;;;;;2722:145:16;;;;;;;;;;;;;;;;;;;;;;;;;917:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;917:89:16;;;;;;;;;;;;;;;;;;;;3330:224;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3330:224:16;-1:-1:-1;;;;;3330:224:16;;;;;;;;;;;;4068:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4068:200:16;-1:-1:-1;;;;;4068:200:16;;;;;;;444:128:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;444:128:20;-1:-1:-1;;;;;444:128:20;;;;;;;1218:104:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1218:104:16;-1:-1:-1;;;;;1218:104:16;;;;;509:90:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;509:90:13;-1:-1:-1;;;;;509:90:13;;;;;;;605:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;605:75:13;;;;4787:210:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4787:210:16;-1:-1:-1;;;;;4787:210:16;;;;;;;1949:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1949:137:16;-1:-1:-1;;;;;1949:137:16;;;;;;;396:107:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;396:107:13;-1:-1:-1;;;;;396:107:13;;;;;1653:129:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1653:129:16;-1:-1:-1;;;;;1653:129:16;;;;;;;;;;2722:145;2787:4;2803:36;2812:10;2824:7;2833:5;2803:8;:36::i;:::-;-1:-1:-1;2856:4:16;2722:145;;;;:::o;917:89::-;987:12;;917:89;:::o;3330:224::-;3409:4;3425:26;3435:4;3441:2;3445:5;3425:9;:26::i;:::-;-1:-1:-1;;;;;3488:14:16;;;;;;:8;:14;;;;;;;;3476:10;3488:26;;;;;;;;;3461:65;;3470:4;;3488:37;;3519:5;3488:37;:30;:37;:::i;:::-;3461:8;:65::i;:::-;-1:-1:-1;3543:4:16;3330:224;;;;;:::o;4068:200::-;4173:10;4148:4;4194:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4194:29:16;;;;;;;;;;4148:4;;4164:76;;4185:7;;4194:45;;4228:10;4194:45;:33;:45;:::i;444:128:20:-;512:4;351:20:13;360:10;351:8;:20::i;:::-;343:29;;;;;;;;528:16:20;534:2;538:5;528;:16::i;1218:104:16:-;-1:-1:-1;;;;;1299:16:16;1273:7;1299:16;;;;;;;;;;;;1218:104::o;509:90:13:-;351:20;360:10;351:8;:20::i;:::-;343:29;;;;;;;;573:19;584:7;573:10;:19::i;:::-;509:90;:::o;605:75::-;648:25;662:10;648:13;:25::i;:::-;605:75::o;4787:210:16:-;4897:10;4872:4;4918:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4918:29:16;;;;;;;;;;4872:4;;4888:81;;4909:7;;4918:50;;4952:15;4918:50;:33;:50;:::i;1949:137::-;2010:4;2026:32;2036:10;2048:2;2052:5;2026:9;:32::i;396:107:13:-;452:4;475:21;:8;488:7;475:21;:12;:21;:::i;:::-;468:28;396:107;-1:-1:-1;;396:107:13:o;1653:129:16:-;-1:-1:-1;;;;;1751:15:16;;;1725:7;1751:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1653:129::o;6832:248::-;-1:-1:-1;;;;;6924:21:16;;;;6916:30;;;;;;-1:-1:-1;;;;;6964:19:16;;;;6956:28;;;;;;-1:-1:-1;;;;;6995:15:16;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7042:31;;;;;;;;;;;;;;;;;6832:248;;;:::o;5216:256::-;-1:-1:-1;;;;;5303:16:16;;;;5295:25;;;;;;-1:-1:-1;;;;;5349:15:16;;:9;:15;;;;;;;;;;;:26;;5369:5;5349:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5331:15:16;;;:9;:15;;;;;;;;;;;:44;;;;5401:13;;;;;;;:24;;5419:5;5401:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5385:13:16;;;:9;:13;;;;;;;;;;;;:40;;;;5440:25;;;;;;;5385:13;;5440:25;;;;;;;;;;;;;5216:256;;;:::o;1212:145:14:-;1270:7;;1297:6;;;;1289:15;;;;;;-1:-1:-1;;1326:5:14;;;1212:145::o;1440:::-;1498:7;1529:5;;;1552:6;;;;1544:15;;;;;;1577:1;1440:145;-1:-1:-1;;;1440:145:14:o;5815:263:16:-;-1:-1:-1;;;;;5889:21:16;;;;5881:30;;;;;;5937:12;;:23;;5954:5;5937:23;:16;:23;:::i;:::-;5922:12;:38;-1:-1:-1;;;;;5991:18:16;;:9;:18;;;;;;;;;;;:29;;6014:5;5991:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5970:18:16;;:9;:18;;;;;;;;;;;:50;;;;6035:36;;;;;;;5970:18;;:9;;6035:36;;;;;;;;;;5815:263;;:::o;686:119:13:-;742:21;:8;755:7;742:21;:12;:21;:::i;:::-;778:20;;-1:-1:-1;;;;;778:20:13;;;;;;;;686:119;:::o;811:127::-;870:24;:8;886:7;870:24;:15;:24;:::i;:::-;909:22;;-1:-1:-1;;;;;909:22:13;;;;;;;;811:127;:::o;787:162:12:-;859:4;-1:-1:-1;;;;;883:21:12;;;;875:30;;;;;;-1:-1:-1;;;;;;922:20:12;:11;:20;;;;;;;;;;;;;;;787:162::o;260:181::-;-1:-1:-1;;;;;336:21:12;;;;328:30;;;;;;377:18;381:4;387:7;377:3;:18::i;:::-;376:19;368:28;;;;;;-1:-1:-1;;;;;407:20:12;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;407:27:12;430:4;407:27;;;260:181::o;515:184::-;-1:-1:-1;;;;;594:21:12;;;;586:30;;;;;;634:18;638:4;644:7;634:3;:18::i;:::-;626:27;;;;;;;;-1:-1:-1;;;;;664:20:12;687:5;664:20;;;;;;;;;;;:28;;-1:-1:-1;;664:28:12;;;515:184::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ERC20.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract ERC20Mintable is ERC20, MinterRole {\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n}\n",
  "sourcePath": "/root/contract/contract/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
  "ast": {
    "absolutePath": "/root/contract/contract/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        6577
      ]
    },
    "id": 6578,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6551,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:20"
      },
      {
        "absolutePath": "/root/contract/contract/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 6552,
        "nodeType": "ImportDirective",
        "scope": 6578,
        "sourceUnit": 6404,
        "src": "26:21:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/contract/contract/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 6553,
        "nodeType": "ImportDirective",
        "scope": 6578,
        "sourceUnit": 5784,
        "src": "48:43:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6554,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6403,
              "src": "179:5:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$6403",
                "typeString": "contract ERC20"
              }
            },
            "id": 6555,
            "nodeType": "InheritanceSpecifier",
            "src": "179:5:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6556,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5783,
              "src": "186:10:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$5783",
                "typeString": "contract MinterRole"
              }
            },
            "id": 6557,
            "nodeType": "InheritanceSpecifier",
            "src": "186:10:20"
          }
        ],
        "contractDependencies": [
          5783,
          6403,
          6646
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 6577,
        "linearizedBaseContracts": [
          6577,
          5783,
          6403,
          6646
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6575,
              "nodeType": "Block",
              "src": "518:54:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6569,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6559,
                        "src": "534:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6570,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6561,
                        "src": "538:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6568,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6292,
                      "src": "528:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "528:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6572,
                  "nodeType": "ExpressionStatement",
                  "src": "528:16:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 6573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "561:4:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6567,
                  "id": 6574,
                  "nodeType": "Return",
                  "src": "554:11:20"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 6576,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 6564,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6563,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5716,
                  "src": "492:10:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "492:10:20"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6559,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6576,
                  "src": "458:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6561,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 6576,
                  "src": "470:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "457:27:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 6567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6566,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6576,
                  "src": "512:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6565,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "511:6:20"
            },
            "scope": 6577,
            "src": "444:128:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6578,
        "src": "153:421:20"
      }
    ],
    "src": "0:575:20"
  },
  "legacyAST": {
    "absolutePath": "/root/contract/contract/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        6577
      ]
    },
    "id": 6578,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6551,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:20"
      },
      {
        "absolutePath": "/root/contract/contract/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 6552,
        "nodeType": "ImportDirective",
        "scope": 6578,
        "sourceUnit": 6404,
        "src": "26:21:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/root/contract/contract/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 6553,
        "nodeType": "ImportDirective",
        "scope": 6578,
        "sourceUnit": 5784,
        "src": "48:43:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6554,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6403,
              "src": "179:5:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$6403",
                "typeString": "contract ERC20"
              }
            },
            "id": 6555,
            "nodeType": "InheritanceSpecifier",
            "src": "179:5:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6556,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5783,
              "src": "186:10:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$5783",
                "typeString": "contract MinterRole"
              }
            },
            "id": 6557,
            "nodeType": "InheritanceSpecifier",
            "src": "186:10:20"
          }
        ],
        "contractDependencies": [
          5783,
          6403,
          6646
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 6577,
        "linearizedBaseContracts": [
          6577,
          5783,
          6403,
          6646
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6575,
              "nodeType": "Block",
              "src": "518:54:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6569,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6559,
                        "src": "534:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6570,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6561,
                        "src": "538:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6568,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6292,
                      "src": "528:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "528:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6572,
                  "nodeType": "ExpressionStatement",
                  "src": "528:16:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 6573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "561:4:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6567,
                  "id": 6574,
                  "nodeType": "Return",
                  "src": "554:11:20"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 6576,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 6564,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6563,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5716,
                  "src": "492:10:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "492:10:20"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6559,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6576,
                  "src": "458:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6561,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 6576,
                  "src": "470:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "457:27:20"
            },
            "payable": false,
            "returnParameters": {
              "id": 6567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6566,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6576,
                  "src": "512:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6565,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "511:6:20"
            },
            "scope": 6577,
            "src": "444:128:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6578,
        "src": "153:421:20"
      }
    ],
    "src": "0:575:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-06-03T22:50:15.833Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "ERC20Mintable"
  },
  "userdoc": {
    "methods": {}
  }
}